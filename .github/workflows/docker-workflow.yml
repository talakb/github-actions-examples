name: Docker Build and Push

# This workflow demonstrates Docker image building and pushing
# Builds multi-platform images and pushes to Docker Hub (simulation)
on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Create Dockerfile for demo
      run: |
        cat << 'EOF' > Dockerfile
        FROM node:18-alpine
        
        # Set working directory
        WORKDIR /app
        
        # Copy package files
        COPY package*.json ./
        
        # Install dependencies
        RUN npm ci --only=production
        
        # Copy application code
        COPY . .
        
        # Expose port
        EXPOSE 3000
        
        # Create non-root user
        RUN addgroup -g 1001 -S nodejs
        RUN adduser -S nextjs -u 1001
        USER nextjs
        
        # Start the application
        CMD ["npm", "start"]
        EOF
        
    - name: Create demo app files
      run: |
        cat << 'EOF' > package.json
        {
          "name": "docker-demo-app",
          "version": "1.0.0",
          "description": "Demo app for Docker workflow",
          "main": "server.js",
          "scripts": {
            "start": "node server.js"
          },
          "dependencies": {
            "express": "^4.18.0"
          }
        }
        EOF
        
        cat << 'EOF' > server.js
        const express = require('express');
        const app = express();
        const port = process.env.PORT || 3000;

        app.get('/', (req, res) => {
          res.json({
            message: 'Hello from Docker!',
            timestamp: new Date().toISOString(),
            version: process.env.APP_VERSION || '1.0.0'
          });
        });

        app.listen(port, () => {
          console.log(`Server running on port ${port}`);
        });
        EOF
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Docker Hub (simulation)
      run: |
        echo "This would log in to Docker Hub with:"
        echo "docker login -u \${{ secrets.DOCKER_USERNAME }} -p \${{ secrets.DOCKER_PASSWORD }}"
        echo "Skipping actual login for demo purposes"
        
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: false  # Set to true to actually push
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test Docker image
      run: |
        echo "Testing Docker image locally..."
        docker build -t test-image .
        echo "Docker image built successfully!"
        
    - name: Simulate image scan
      run: |
        echo "Simulating security scan of Docker image..."
        echo "No vulnerabilities found (simulated)"
        
    - name: Show image info
      run: |
        docker images test-image
        echo "Image tags: ${{ steps.meta.outputs.tags }}"